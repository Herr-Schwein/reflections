What happens when you initialize a repository? Why do you need to do it?
A .git file is created to store different versions of files in the repository.

How is the staging area different from the working directory and the repository?
What value do you think it offers?
Files in staging area are to be committed. The staging area makes every commit as small as possible.

How can you use the staging area to make sure you have one commit per logical
change?
Staging area is a buff which allow you to commit after you have done all the changes needed in multiple file. Thus, it makes sure that every commit is for one logical change.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?
When I want to create a different version of the project, such as experiment version or foreign language version, I will make changes which may not in official version. In this situation, creating branches would be helpful to organize the project.

How do the diagrams help you visualize the branch structure?
Diagrams show different branches and their relationship. It is more understandable than log.


What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?
Commit a new commit merge two branches heads. This commit has two parents.

What are the pros and cons of Git's automatic merging vs. always doing merges
manually?
